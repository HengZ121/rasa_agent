flows:
  save_travel_info:
    description: Record user's travel information.
    steps:
      - collect: has_travelled
        next:
          - if: slots.has_travelled
            then:
              - collect: departure_date
                description: "slot departure_date should be formatted to the ISO standard (YYYY-MM-DD). Knowing today is Wednesday 2025-02-19"
              - collect: return_date
                description: "slot return_date should be formatted to the ISO standard (YYYY-MM-DD). Knowing today is Wednesday 2025-02-19"
              - link: "save_employer_info"
          - else:
            - link: "save_employer_info"
      

  save_employer_info:
    description: Record user's employer information.
    steps:
      - collect: is_self_employed
        next:
          - if: not slots.is_self_employed
            then:
              - collect: employer_name
                description: "An input of company name"
              - collect: work_start_date
                description: "slot work_start_date should be formatted to the ISO standard (YYYY-MM-DD). Knowing today is Wednesday 2025-02-19"
              - collect: hours_worked
              - link: "save_work_info"
          - else:
            - link: "save_work_info"

  save_work_info:
    description: Record user's work information.
    steps:
      - collect: gross_earning
        description: "An entire amount input, Formatted it with two decimal; for example: 80000 -> $80000.00"
      - collect: work_end_date

